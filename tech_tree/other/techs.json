[
    {
        "name": "Light - LED",
        "type": "actuators",
        "difficulty": 1,
        "id": "a1_01",
        "depends": [],
        "notes": "Basic light-emitting diode for signaling or lighting in various colors."
    },
    {
        "name": "Motor - Servo",
        "type": "actuators",
        "difficulty": 1,
        "id": "a1_03",
        "depends": [],
        "notes": "Rotates to a specific angle, commonly used in robotics and control systems."
    },
    {
        "name": "Sound - Buzzer",
        "type": "actuators",
        "difficulty": 1,
        "id": "a1_04",
        "depends": [],
        "notes": "Produces sound for notifications or alarms, controlled by a digital pin."
    },
    {
        "name": "Display - 7-Segment Display",
        "type": "actuators",
        "difficulty": 1,
        "id": "a1_05",
        "depends": [
            "a1_01"
        ],
        "notes": "Used for displaying numeric digits in digital form."
    },
    {
        "name": "Electromagnet",
        "type": "actuators",
        "difficulty": 1,
        "id": "a1_06",
        "depends": [],
        "notes": ""
    },
    {
        "name": "Light - RGB LED",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_01",
        "depends": [
            "a1_01"
        ],
        "notes": "Multicolor LED that can create a variety of colors by mixing red, green, and blue light."
    },
    {
        "name": "Motor - DC Motor",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_02",
        "depends": [
            "a1_03"
        ],
        "notes": "Basic motor for driving wheels, fans, or simple mechanisms."
    },
    {
        "name": "Pump - Water Pump",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_03",
        "depends": [
            "a2_02"
        ],
        "notes": "Moves water or other fluids, commonly used in aquaponics, hydroponics, or fluid handling."
    },
    {
        "name": "Fan - Blower",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_04",
        "depends": [
            "a2_02"
        ],
        "notes": "High-pressure air blower, often used in cooling systems or ventilation."
    },
    {
        "name": "Gripper - Servo Gripper",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_05",
        "depends": [
            "a1_03"
        ],
        "notes": "Robot gripper controlled by a servo motor for picking up objects."
    },
    {
        "name": "Display - LCD Screen",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_06",
        "depends": [
            "a1_05"
        ],
        "notes": "Displays text or basic graphics, often used in user interfaces."
    },
    {
        "name": "Fan - DC Fan",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_07",
        "depends": [
            "a2_02"
        ],
        "notes": "Small fan motor for air circulation or cooling purposes."
    },
    {
        "name": "Sound - Speaker",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_08",
        "depends": [
            "a1_04"
        ],
        "notes": "Produces audio output, often used for music or speech in Arduino projects."
    },
    {
        "name": "Actuator - Solenoid",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_09",
        "depends": [
            "a1_06"
        ],
        "notes": "Electromagnetic device used for linear motion, often used in locks or valves."
    },
    {
        "name": "Valve - Solenoid Valve",
        "type": "actuators",
        "difficulty": 2,
        "id": "a2_10",
        "depends": [
            "a2_09"
        ],
        "notes": "Electromagnetic valve used for controlling fluid or gas flow in pipes."
    },
    {
        "name": "Motor - Brushless DC Motor (BLDC)",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_01",
        "depends": [
            "a2_02"
        ],
        "notes": "High-efficiency motor used in drones, robotics, and electric vehicles."
    },
    {
        "name": "Motor - Stepper Motor",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_02",
        "depends": [
            "a2_02"
        ],
        "notes": "Precise motor control for applications requiring specific step movements."
    },
    {
        "name": "Motor Driver - L298N Motor Driver",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_03",
        "depends": [
            "a3_02"
        ],
        "notes": "Dual H-Bridge motor driver for controlling DC motors and stepper motors."
    },
    {
        "name": "Motor Driver - L293D Motor Driver",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_04",
        "depends": [
            "a3_02"
        ],
        "notes": "Motor driver used to control DC motors, stepper motors, and other actuators."
    },
    {
        "name": "Pump - Peristaltic Pump",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_05",
        "depends": [
            "a3_02"
        ],
        "notes": "Used for precise fluid dispensing, often used in medical or laboratory applications."
    },
    {
        "name": "Display - OLED Display",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_06",
        "depends": [
            "a2_06"
        ],
        "notes": "Small display for text or graphics with low power consumption."
    },
    {
        "name": "Electric Actuator - Linear Actuator",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_06",
        "depends": [
            "a3_02"
        ],
        "notes": "Creates linear motion to adjust position, often used in robotics or adjustable furniture."
    },
    {
        "name": "Actuator - Pneumatic Cylinder",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_07",
        "depends": [],
        "notes": "Uses compressed air to create linear motion, common in automated systems."
    },
    {
        "name": "Actuator - Hydraulic Cylinder",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_08",
        "depends": [],
        "notes": "Uses pressurized fluid for high-force applications, typically in industrial systems."
    },
    {
        "name": "Heater - Peltier Module",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_09",
        "depends": [
            "a1_06"
        ],
        "notes": "Thermoelectric cooler/heater used for precise temperature control."
    },
    {
        "name": "Gripper - Pneumatic Gripper",
        "type": "actuators",
        "difficulty": 3,
        "id": "a3_10",
        "depends": [],
        "notes": "Uses compressed air to actuate a gripper mechanism for handling objects."
    },
    {
        "name": "Ohm's Law",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_01",
        "depends": [],
        "notes": "Understanding the relationship between voltage, current, and resistance."
    },
    {
        "name": "Resistors",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_02",
        "depends": [],
        "notes": "Understanding how resistors limit current and control voltage in a circuit."
    },
    {
        "name": "LEDs",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_03",
        "depends": [],
        "notes": "Basic light-emitting diodes, require current-limiting resistors."
    },
    {
        "name": "Series Circuits",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_04",
        "depends": [],
        "notes": "Basic circuit configuration where components are connected end-to-end."
    },
    {
        "name": "Voltage Dividers",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_05",
        "depends": [],
        "notes": "Simple circuits to step down voltage using resistors."
    },
    {
        "name": "Potentiometers",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_06",
        "depends": [],
        "notes": "Variable resistors used for adjusting voltage or as analog input."
    },
    {
        "name": "Breadboards",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_07",
        "depends": [],
        "notes": "Prototyping tool for creating temporary circuits without soldering."
    },
    {
        "name": "Parallel Circuits",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_08",
        "depends": [],
        "notes": "Circuit configuration where components share the same voltage across branches."
    },
    {
        "name": "Capacitors",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_09",
        "depends": [],
        "notes": "Used for storing and releasing electrical energy, and for filtering noise."
    },
    {
        "name": "Switches",
        "type": "circuit_knowledge",
        "difficulty": 1,
        "id": "c1_10",
        "depends": [],
        "notes": ""
    },
    {
        "name": "Relays",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_01",
        "depends": [
            "c1_10"
        ],
        "notes": "Electromechanical switches for controlling high-power devices."
    },
    {
        "name": "H-Bridge",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_02",
        "depends": [
            "c2_10",
            "c2_09"
        ],
        "notes": "Used to control the direction and speed of DC motors."
    },
    {
        "name": "Pull-Up and Pull-Down Resistors",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_03",
        "depends": [
            "c1_02"
        ],
        "notes": "Used to stabilize digital inputs by defining high or low states."
    },
    {
        "name": "Analog to Digital Conversion (ADC)",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_04",
        "depends": [],
        "notes": "Understanding how Arduino converts analog signals into digital values."
    },
    {
        "name": "PWM (Pulse Width Modulation)",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_05",
        "depends": [
            "c2_04"
        ],
        "notes": "Simulating analog output using digital pins."
    },
    {
        "name": "Voltage Regulators",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_06",
        "depends": [],
        "notes": "Circuits for stepping down or stabilizing voltage levels."
    },
    {
        "name": "I2C Pull-Up Resistors",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_07",
        "depends": [
            "c1_02"
        ],
        "notes": "Required for proper communication in I2C circuits."
    },
    {
        "name": "Sensors and Signal Conditioning",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_08",
        "depends": [],
        "notes": "Preparing sensor outputs (e.g., amplifying or filtering) for Arduino input."
    },
    {
        "name": "Transistors",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_09",
        "depends": [
            "c2_01"
        ],
        "notes": "Used as switches or amplifiers for controlling larger currents."
    },
    {
        "name": "Diodes",
        "type": "circuit_knowledge",
        "difficulty": 2,
        "id": "c2_10",
        "depends": [
            "c1_03"
        ],
        "notes": "Allow current to flow in one direction; used for protection and signal control."
    },
    {
        "name": "Current Measurement",
        "type": "circuit_knowledge",
        "difficulty": 3,
        "id": "c3_01",
        "depends": [],
        "notes": "Using shunt resistors or dedicated ICs to measure current in a circuit."
    },
    {
        "name": "Circuit Protection",
        "type": "circuit_knowledge",
        "difficulty": 3,
        "id": "c3_02",
        "depends": [],
        "notes": "Fuses, diodes, and resistors to protect circuits from overcurrent or reverse polarity."
    },
    {
        "name": "Power Management",
        "type": "circuit_knowledge",
        "difficulty": 3,
        "id": "c3_03",
        "depends": [],
        "notes": "Techniques for managing power efficiency in circuits."
    },
    {
        "name": "Decoupling Capacitors",
        "type": "circuit_knowledge",
        "difficulty": 3,
        "id": "c3_04",
        "depends": [],
        "notes": "Used to stabilize voltage supplies by filtering noise."
    },
    {
        "name": "Oscillators",
        "type": "circuit_knowledge",
        "difficulty": 3,
        "id": "c3_05",
        "depends": [
            "c2_05"
        ],
        "notes": "Generate clock signals for timing and waveform generation."
    },
    {
        "name": "LEDs",
        "type": "diagrams",
        "difficulty": 1,
        "id": "d1_01",
        "depends": [],
        "notes": ""
    },
    {
        "name": "Potentiometers",
        "type": "diagrams",
        "difficulty": 1,
        "id": "d1_02",
        "depends": [],
        "notes": ""
    },
    {
        "name": "Relay Modules",
        "type": "diagrams",
        "difficulty": 1,
        "id": "d1_03",
        "depends": [],
        "notes": "VCC, GND, and control pins"
    },
    {
        "name": "PWM Wiring",
        "type": "diagrams",
        "difficulty": 2,
        "id": "d2_04",
        "depends": [],
        "notes": "Servo motors, dimming LEDs, controlling motors"
    },
    {
        "name": "Displays (LCD/OLED)",
        "type": "diagrams",
        "difficulty": 2,
        "id": "d2_06",
        "depends": [],
        "notes": "I2C or SPI wiring"
    },
    {
        "name": "UART (TX/RX)",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_01",
        "depends": [],
        "notes": "TX to RX connections for GPS, Bluetooth"
    },
    {
        "name": "I2C (SDA/SCL)",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_02",
        "depends": [],
        "notes": "SDA (Data) and SCL (Clock), with pull-up resistors"
    },
    {
        "name": "SPI (MISO/MOSI/SCLK/SS)",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_03",
        "depends": [],
        "notes": "High-speed communication for modules"
    },
    {
        "name": "Voltage Regulators",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_04",
        "depends": [],
        "notes": "Stepping down voltages for Arduino"
    },
    {
        "name": "Single-Wire Connections",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_05",
        "depends": [],
        "notes": "One-wire sensors like DS18B20"
    },
    {
        "name": "Multiplexing",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_06",
        "depends": [],
        "notes": "74HC595 shift registers for extending GPIO"
    },
    {
        "name": "H-Bridge Wiring",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_10",
        "depends": [],
        "notes": "L298N, L293D for DC motor control"
    },
    {
        "name": "Step-Down Wiring",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_11",
        "depends": [],
        "notes": "Higher voltage to Arduino-safe levels"
    },
    {
        "name": "RF and Bluetooth Modules",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_12",
        "depends": [],
        "notes": "VCC, GND, TX/RX or SDA/SCL"
    },
    {
        "name": "WiFi Modules",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_13",
        "depends": [],
        "notes": "ESP8266, ESP32 power and data"
    },
    {
        "name": "SD Card Modules",
        "type": "diagrams",
        "difficulty": 3,
        "id": "d3_14",
        "depends": [],
        "notes": "SPI-based wiring for data transfer"
    },
    {
        "name": "Basic Syntax",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_01",
        "depends": [],
        "notes": "Introduction to the basic structure of Arduino sketches (programs)."
    },
    {
        "name": "Digital Pins",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_11",
        "depends": [],
        "notes": "Digital input (e.g., button), Digital output (e.g., LED)"
    },
    {
        "name": "Variables and Data Types",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_02",
        "depends": [],
        "notes": "Understanding how to declare and use variables of different types (e.g., int, float, char)."
    },
    {
        "name": "Analog Pins",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_12",
        "depends": [],
        "notes": "Analog input (e.g., sensors like potentiometers or temperature)"
    },
    {
        "name": "Conditional Statements (if/else)",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_03",
        "depends": [],
        "notes": "Used to make decisions based on conditions."
    },
    {
        "name": "Loops (for, while)",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_04",
        "depends": [],
        "notes": "Looping structures to repeat actions (e.g., for, while)."
    },
    {
        "name": "Functions",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_05",
        "depends": [],
        "notes": "Modularizing code into reusable blocks using void or returning values."
    },
    {
        "name": "Input/Output Functions",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_06",
        "depends": [],
        "notes": "Functions like digitalWrite(), digitalRead(), analogWrite(), analogRead() to control components and read values."
    },
    {
        "name": "Serial Communication",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_07",
        "depends": [],
        "notes": "Using the Serial functions (Serial.begin(), Serial.print(), etc.) for communication between Arduino and a computer."
    },
    {
        "name": "Timing Functions",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_08",
        "depends": [],
        "notes": "Functions like delay(), millis() for controlling timing in Arduino programs."
    },
    {
        "name": "Arrays",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_09",
        "depends": [],
        "notes": "Storing multiple values of the same type in a single variable for easy access and iteration."
    },
    {
        "name": "String Manipulation",
        "type": "programming",
        "difficulty": 1,
        "id": "p1_10",
        "depends": [],
        "notes": "Working with text data (e.g., String, char[]), parsing and modifying strings."
    },
    {
        "name": "Interrupts",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_01",
        "depends": [],
        "notes": "Handling external interrupts for time-sensitive operations (e.g., using attachInterrupt())."
    },
    {
        "name": "Analog Signals",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_02",
        "depends": [],
        "notes": "Working with analog signals, including reading sensor data and controlling PWM outputs."
    },
    {
        "name": "Libraries",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_03",
        "depends": [],
        "notes": "Using pre-written code libraries for sensors, motors, and other devices (e.g., Wire.h, Servo.h)."
    },
    {
        "name": "Debouncing",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_04",
        "depends": [
            "p2_01"
        ],
        "notes": "Ensuring clean signals from buttons or switches without multiple triggers."
    },
    {
        "name": "Data Structures (Structs)",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_05",
        "depends": [
            "p1_02"
        ],
        "notes": "Using struct to organize and store complex data in a structured way."
    },
    {
        "name": "PWM (Pulse Width Modulation)",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_06",
        "depends": [],
        "notes": "Controlling devices like motors or LEDs with analog-like signals using analogWrite()."
    },
    {
        "name": "I2C Communication",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_07",
        "depends": [
            "p1_07"
        ],
        "notes": "Communicating with multiple devices using the I2C protocol (e.g., Wire.h)."
    },
    {
        "name": "SPI Communication",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_08",
        "depends": [
            "p2_07"
        ],
        "notes": "Serial peripheral interface for fast data exchange (e.g., using SPI.h)."
    },
    {
        "name": "Data Logging",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_09",
        "depends": [
            "p1_07"
        ],
        "notes": "Storing sensor readings to an SD card or external memory."
    },
    {
        "name": "EEPROM Usage",
        "type": "programming",
        "difficulty": 2,
        "id": "p2_10",
        "depends": [
            "p2_05"
        ],
        "notes": "Storing data persistently in the Arduino's EEPROM."
    },
    {
        "name": "Multi-threading (Simulated)",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_01",
        "depends": [
            "p2_01"
        ],
        "notes": "Simulating multiple processes using millis() instead of delay() for more responsive programs."
    },
    {
        "name": "State Machines",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_02",
        "depends": [
            "p2_01"
        ],
        "notes": "Organizing code into different states for more complex control (e.g., using switch statements)."
    },
    {
        "name": "Advanced Data Structures (Linked Lists)",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_03",
        "depends": [
            "p2_05"
        ],
        "notes": "Implementing more advanced data structures like linked lists for complex projects."
    },
    {
        "name": "Real-Time Clock (RTC)",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_04",
        "depends": [
            "p2_01"
        ],
        "notes": "Using a real-time clock to manage time-based events and logs."
    },
    {
        "name": "Advanced Interrupt Handling",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_05",
        "depends": [
            "p2_01",
            "p3_01"
        ],
        "notes": "Handling multiple interrupt sources and nesting interrupts for complex real-time applications."
    },
    {
        "name": "Networking (WiFi/Ethernet)",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_06",
        "depends": [
            "p2_07",
            "p2_08"
        ],
        "notes": "Using WiFi or Ethernet shields/modules for networking and communication."
    },
    {
        "name": "JSON Parsing",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_07",
        "depends": [
            "p2_05"
        ],
        "notes": "Parsing and creating JSON data for communication with web services or APIs."
    },
    {
        "name": "MQTT Communication",
        "type": "programming",
        "difficulty": 3,
        "id": "p3_08",
        "depends": [
            "p3_06"
        ],
        "notes": "Using the MQTT protocol for IoT (Internet of Things) communication between devices."
    },
    {
        "name": "Input Device - Touch Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_01",
        "depends": [],
        "notes": "Detects touch or proximity, often used in user interfaces."
    },
    {
        "name": "Light - LDR (Light Dependent Resistor)",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_02",
        "depends": [],
        "notes": "Detects light levels; resistance changes based on light intensity."
    },
    {
        "name": "Light - Photoresistor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_03",
        "depends": [],
        "notes": "Simple analog sensor for detecting light."
    },
    {
        "name": "Sound - KY-038",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_04",
        "depends": [],
        "notes": "Basic microphone module for sound detection."
    },
    {
        "name": "Temperature - Thermistor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_05",
        "depends": [],
        "notes": "Simple temperature sensor based on resistance changes."
    },
    {
        "name": "Input Device - Joystick Module",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_06",
        "depends": [],
        "notes": "Detects X-Y motion for user input control."
    },
    {
        "name": "Motion Detection - Tilt Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_07",
        "depends": [],
        "notes": "Detects orientation changes or tilting."
    },
    {
        "name": "Audio - Sound Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_08",
        "depends": [],
        "notes": "Detects sound intensity, useful for noise level monitoring."
    },
    {
        "name": "Ultrasonic Distance - HC-SR04",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_09",
        "depends": [],
        "notes": "Measures distance using ultrasonic waves, ideal for obstacle detection."
    },
    {
        "name": "Temperature and Humidity - DHT11",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_10",
        "depends": [],
        "notes": "Measures temperature and humidity, easy to use with libraries."
    },
    {
        "name": "Temperature and Humidity - DHT22",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_11",
        "depends": [],
        "notes": "Higher accuracy and range compared to DHT11."
    },
    {
        "name": "Infrared - IR Receiver",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_12",
        "depends": [],
        "notes": "Receives signals from IR remotes for control applications."
    },
    {
        "name": "Motion Detection - PIR Motion Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_13",
        "depends": [],
        "notes": "Detects movement, commonly used in security systems."
    },
    {
        "name": "Environmental - Soil Moisture Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_14",
        "depends": [],
        "notes": "Measures the water content in soil, ideal for gardening projects."
    },
    {
        "name": "Environmental - Rain Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_15",
        "depends": [],
        "notes": "Detects the presence of rain using water conductivity."
    },
    {
        "name": "Environmental - Water Level Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_16",
        "depends": [],
        "notes": "Measures the level of water using conductive traces."
    },
    {
        "name": "Fire Detection - Flame Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_17",
        "depends": [],
        "notes": "Detects the presence of fire or flames."
    },
    {
        "name": "Health - Pulse Sensor",
        "type": "sensors",
        "difficulty": 1,
        "id": "s1_18",
        "depends": [],
        "notes": "Measures pulse rate, simple to integrate into Arduino."
    },
    {
        "name": "Barometric Pressure - BMP180",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_01",
        "depends": [],
        "notes": "Measures atmospheric pressure and altitude, often used in weather projects."
    },
    {
        "name": "Barometric Pressure and Temperature - BMP280",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_02",
        "depends": [],
        "notes": "Improved version of BMP180 with temperature readings."
    },
    {
        "name": "Infrared - IR Proximity Sensor",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_03",
        "depends": [],
        "notes": "Detects nearby objects using reflected IR signals."
    },
    {
        "name": "Infrared Temperature - MLX90614",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_04",
        "depends": [],
        "notes": "Non-contact temperature sensor, great for thermal readings."
    },
    {
        "name": "Accelerometer and Gyroscope - MPU6050",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_05",
        "depends": [],
        "notes": "Measures acceleration and angular velocity, good for motion sensing."
    },
    {
        "name": "Accelerometer - ADXL345",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_06",
        "depends": [],
        "notes": "3-axis accelerometer for detecting motion and orientation."
    },
    {
        "name": "Light - TSL2561",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_07",
        "depends": [],
        "notes": "Digital light intensity sensor, provides more accurate readings than LDR."
    },
    {
        "name": "Gas - MQ-2",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_08",
        "depends": [],
        "notes": "Detects combustible gases like LPG, methane, and smoke."
    },
    {
        "name": "Gas - MQ-7",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_09",
        "depends": [],
        "notes": "Specialized in detecting carbon monoxide (CO)."
    },
    {
        "name": "Location - GPS Module",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_10",
        "depends": [],
        "notes": "Provides latitude, longitude, and altitude data."
    },
    {
        "name": "Ultraviolet - UV Sensor (ML8511)",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_11",
        "depends": [],
        "notes": "Measures ultraviolet light intensity, useful for UV index monitoring."
    },
    {
        "name": "Magnetic Field - Hall Effect Sensor",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_12",
        "depends": [],
        "notes": "Detects magnetic fields, commonly used in proximity switches."
    },
    {
        "name": "Temperature, Humidity and Pressure - BME280",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_13",
        "depends": [],
        "notes": "All-in-one environmental sensor for weather monitoring."
    },
    {
        "name": "Identification - RFID Reader",
        "type": "sensors",
        "difficulty": 2,
        "id": "s2_14",
        "depends": [],
        "notes": "Reads RFID tags for identification and access control."
    },
    {
        "name": "Force - Load Cell",
        "type": "sensors",
        "difficulty": 3,
        "id": "s3_01",
        "depends": [],
        "notes": "Measures weight or force, often used in scales."
    },
    {
        "name": "Air Quality - Dust Sensor",
        "type": "sensors",
        "difficulty": 3,
        "id": "s3_02",
        "depends": [],
        "notes": "Measures particulate matter in the air, useful for pollution monitoring."
    },
    {
        "name": "Color - TCS34725",
        "type": "sensors",
        "difficulty": 3,
        "id": "s3_03",
        "depends": [],
        "notes": "Color sensor with RGB and clear light sensing capabilities."
    },
    {
        "name": "Biometrics - Fingerprint Sensor",
        "type": "sensors",
        "difficulty": 3,
        "id": "s3_04",
        "depends": [],
        "notes": "Captures and verifies fingerprints, useful for security systems."
    },
    {
        "name": "Health - MAX30100",
        "type": "sensors",
        "difficulty": 3,
        "id": "s3_05",
        "depends": [],
        "notes": "Measures heart rate and blood oxygen saturation, used in health monitoring."
    },
    {
        "name": "Breadboards",
        "type": "wiring",
        "difficulty": 1,
        "id": "w1_03",
        "depends": [],
        "notes": "Temporary prototyping connections"
    },
    {
        "name": "Jumper Wires",
        "type": "wiring",
        "difficulty": 1,
        "id": "w1_04",
        "depends": [],
        "notes": "Male-to-Male, Male-to-Female, Female-to-Female wires"
    },
    {
        "name": "Power Connections",
        "type": "wiring",
        "difficulty": 1,
        "id": "w1_05",
        "depends": [],
        "notes": "VCC/5V/3.3V Pins, GND (Ground)"
    },
    {
        "name": "USB Connection",
        "type": "wiring",
        "difficulty": 1,
        "id": "w1_11",
        "depends": [],
        "notes": "Powering and programming Arduino (5V)"
    },
    {
        "name": "LiPo Battery Connectors",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_01",
        "depends": [],
        "notes": "JST connectors for LiPo batteries"
    },
    {
        "name": "Servo Connections",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_02",
        "depends": [],
        "notes": "Signal (PWM), power, and ground"
    },
    {
        "name": "PCB Headers",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_05",
        "depends": [],
        "notes": "Pin headers for shields and modules"
    },
    {
        "name": "Dupont Connectors",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_06",
        "depends": [],
        "notes": "Modular connectors for custom wiring"
    },
    {
        "name": "Terminal Blocks",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_07",
        "depends": [],
        "notes": "Solid screw-tight connections"
    },
    {
        "name": "PCB Basics",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_07",
        "depends": [],
        "notes": "Introduction to printed circuit boards for more permanent wiring."
    },
    {
        "name": "Soldering",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_08",
        "depends": [],
        "notes": "create permanent joints using soldering iron"
    },
    {
        "name": "Heat shrink tubing",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_09",
        "depends": [],
        "notes": "isolate open wires using rubber tubing"
    },
    {
        "name": "Crimping",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_10",
        "depends": [],
        "notes": "create mechanical connections using a crimping tool"
    },
    {
        "name": "Barrel Jack Connector",
        "type": "wiring",
        "difficulty": 2,
        "id": "w2_12",
        "depends": [],
        "notes": "Powering Arduino boards (7-12V)"
    },
    {
        "name": "Bus Connectors",
        "type": "wiring",
        "difficulty": 3,
        "id": "w3_07",
        "depends": [],
        "notes": "Standardized connectors like Grove"
    },
    {
        "name": "FPC/FFC Cables",
        "type": "wiring",
        "difficulty": 3,
        "id": "w3_08",
        "depends": [],
        "notes": "Flat cables for LCDs or compact modules"
    },
    {
        "name": "Custom PCBs",
        "type": "wiring",
        "difficulty": 3,
        "id": "w3_09",
        "depends": [],
        "notes": "Printed circuit boards with routed connections"
    }
]